{"erreurs":[],"metaData":[{"typeMetadata":"DATE_SIGNATURE","message":"Mon Nov 18 15:34:56 UTC 2024"},{"typeMetadata":"DN_CERTIFICAT","message":"CN=Liste Blanche DRIM-M,OU=318751275100020,O=AGENCE DU NUMERIQUE EN SANTE,ST=Paris (75),C=FR"},{"typeMetadata":"RAPPORT_DIAGNOSTIQUE","message":""},{"typeMetadata":"DOCUMENT_ORIGINAL_NON_SIGNE","message":"PExpc3RlQmxhbmNoZURSSU0tTSB4bWxucz0iaHR0cHM6Ly9naXRodWIuY29tL2Fuc2ZvcmdlL0RSSU0tTV9EQVRBIiB2ZXJzaW9uRm9ybWF0PSIxLjAuMCI+CiAgICA8RGF0ZURlR2VuZXJhdGlvbj4yMDI0LTA0LTIyVDExOjA4OjEyWjwvRGF0ZURlR2VuZXJhdGlvbj4KICAgIDxMaXN0ZURvbWFpbmVzPgogICAgICAgIDxEb21haW5lPgoJCSAgICA8SWRlbnRpZmlhbnQ+MTwvSWRlbnRpZmlhbnQ+CiAgICAgICAgICAgIDxkYj5kYjEuMTExLm1lc2ltYWdlc21lZGljYWxlcy5mcjwvZGI+CgkJCTx2aT52aTEuMTExLm1lc2ltYWdlc21lZGljYWxlcy5mcjwvdmk+CiAgICAgICAgICAgIDxEZW5vbWluYXRpb24+T3BlcmF0ZXVyIDAxIHRlc3Q8L0Rlbm9taW5hdGlvbj4KICAgICAgICAgICAgPEROQ2VydGlmaWNhdE9wZXJhdGV1cj5DTj1kYjEuMTExLm1lc2ltYWdlc21lZGljYWxlcy5mcixPVT0zMTU5ODUxMzUwMDE4NyxPPWVkaXRldXIsU1Q9UGFyaXMgKDc1KSxDPUZSPC9ETkNlcnRpZmljYXRPcGVyYXRldXI+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5zdXBwb3J0ZHJpbS1tQG9wMDEuZnIsIDA3IDMzIDY1IDE4IDM3PC9TdXBwb3J0Q29udGFjdD4KICAgICAgICAgICAgPERhdGVNQUo+MjAyNC0wNC0yM1QyMDozNjoxMlo8L0RhdGVNQUo+CiAgICAgICAgPC9Eb21haW5lPgoJCTxEb21haW5lPgoJCSAgICA8SWRlbnRpZmlhbnQ+MTwvSWRlbnRpZmlhbnQ+CiAgICAgICAgICAgIDxkYj5kYjEuMTEyLm1lc2ltYWdlc21lZGljYWxlcy5mcjwvZGI+CgkJCTx2aT52aTEuMTEyLm1lc2ltYWdlc21lZGljYWxlcy5mcjwvdmk+CiAgICAgICAgICAgIDxEZW5vbWluYXRpb24+T3BlcmF0ZXVyIDAxIHRlc3Q8L0Rlbm9taW5hdGlvbj4KICAgICAgICAgICAgPEROQ2VydGlmaWNhdE9wZXJhdGV1cj5DTj1kYjEuMTEyLm1lc2ltYWdlc21lZGljYWxlcy5mcixPVT00Nzk5ODUxMzUwNzgxMCxPPWVkaXRldXIsU1Q9UGFyaXMgKDc1KSxDPUZSPC9ETkNlcnRpZmljYXRPcGVyYXRldXI+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5zdXBwb3J0ZHJpbS1tQG9wMDEuZnIsIDA3IDMzIDY1IDE4IDM3PC9TdXBwb3J0Q29udGFjdD4KICAgICAgICAgICAgPERhdGVNQUo+MjAyNC0wNC0yM1QyMDozNjoxMlo8L0RhdGVNQUo+CiAgICAgICAgPC9Eb21haW5lPgoJCTxEb21haW5lPgoJCSAgICA8SWRlbnRpZmlhbnQ+MjwvSWRlbnRpZmlhbnQ+CiAgICAgICAgICAgIDxkYj5kYjEuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcjwvZGI+CgkJCTx2aT52aTEuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcjwvdmk+CiAgICAgICAgICAgIDxEZW5vbWluYXRpb24+T3BlcmF0ZXVyIDAyIHRlc3Q8L0Rlbm9taW5hdGlvbj4KICAgICAgICAgICAgPEROQ2VydGlmaWNhdE9wZXJhdGV1cj5DTj1kYjEuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcixPVT00OTE4ODM5NzEwMDAzOSxPPWVkaXRldXIsU1Q9TWFyc2VpbGxlICgxMyksQz1GUjwvRE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPgogICAgICAgICAgICA8U3VwcG9ydENvbnRhY3Q+c3VwcG9ydGRyaW0tbUBvcDAyLmNvbSwgMDYgMzIgNDQgMDkgMDk8L1N1cHBvcnRDb250YWN0PgogICAgICAgICAgICA8RGF0ZU1BSj4yMDI0LTA0LTIzVDIwOjM2OjEyWjwvRGF0ZU1BSj4KICAgICAgICA8L0RvbWFpbmU+CgkJPERvbWFpbmU+CgkJICAgIDxJZGVudGlmaWFudD4yPC9JZGVudGlmaWFudD4KICAgICAgICAgICAgPGRiPmRiMi4zNDUubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC9kYj4KCQkJPHZpPnZpMi4zNDUubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC92aT4KICAgICAgICAgICAgPERlbm9taW5hdGlvbj5PcGVyYXRldXIgMDIgdGVzdDwvRGVub21pbmF0aW9uPgogICAgICAgICAgICA8RE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPkNOPWRiMi4zNDUubWVzaW1hZ2VzbWVkaWNhbGVzLmZyLE9VPTQ5MTg4Mzk3MTAwMDM5LE89ZWRpdGV1cixTVD1NYXJzZWlsbGUgKDEzKSxDPUZSPC9ETkNlcnRpZmljYXRPcGVyYXRldXI+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5zdXBwb3J0ZHJpbS1tQG9wMDIuY29tLCAwNiAzMiA0NCAwOSAwOTwvU3VwcG9ydENvbnRhY3Q+CiAgICAgICAgICAgIDxEYXRlTUFKPjIwMjQtMDQtMjNUMjA6MzY6MTJaPC9EYXRlTUFKPgogICAgICAgIDwvRG9tYWluZT4KCQk8RG9tYWluZT4KCQkgICAgPElkZW50aWZpYW50PjM8L0lkZW50aWZpYW50PgogICAgICAgICAgICA8ZGI+ZGIxLjg2Ny5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L2RiPgoJCQk8dmk+dmkxLjg2Ny5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L3ZpPgogICAgICAgICAgICA8RGVub21pbmF0aW9uPk9wZXJhdGV1ciAwMyB0ZXN0PC9EZW5vbWluYXRpb24+CiAgICAgICAgICAgIDxETkNlcnRpZmljYXRPcGVyYXRldXI+Q049ZGIxLjg2Ny5tZXNpbWFnZXNtZWRpY2FsZXMuZnIsT1U9MzE5NTQ1MjM3MDA3NjUsTz1lZGl0ZXVyLFNUPUx5b24oNjkpLEM9RlI8L0ROQ2VydGlmaWNhdE9wZXJhdGV1cj4KICAgICAgICAgICAgPFN1cHBvcnRDb250YWN0PnN1cHBvcnRkcmltLW1Ab3AwMy5mciwgMDYgNDQgODcgOTggMDc8L1N1cHBvcnRDb250YWN0PgogICAgICAgICAgICA8RGF0ZU1BSj4yMDI0LTA0LTI1VDA5OjI0OjEyWjwvRGF0ZU1BSj4KICAgICAgICA8L0RvbWFpbmU+CgkJPERvbWFpbmU+CgkJICAgIDxJZGVudGlmaWFudD4zPC9JZGVudGlmaWFudD4KICAgICAgICAgICAgPGRiPmRiMi44NjcubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC9kYj4KCQkJPHZpPnZpMi44NjcubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC92aT4KICAgICAgICAgICAgPERlbm9taW5hdGlvbj5PcGVyYXRldXIgMDMgdGVzdDwvRGVub21pbmF0aW9uPgogICAgICAgICAgICA8RE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPkNOPWRiMi44NjcubWVzaW1hZ2VzbWVkaWNhbGVzLmZyLE9VPTMxOTU0NTIzNzAwNzY1LE89ZWRpdGV1cixTVD1MeW9uKDY5KSxDPUZSPC9ETkNlcnRpZmljYXRPcGVyYXRldXI+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5zdXBwb3J0ZHJpbS1tQG9wMDMuZnIsIDA2IDQ0IDg3IDk4IDA3PC9TdXBwb3J0Q29udGFjdD4KICAgICAgICAgICAgPERhdGVNQUo+MjAyNC0wNC0yNVQwOToyNDoxMlo8L0RhdGVNQUo+CiAgICAgICAgPC9Eb21haW5lPgogICAgPC9MaXN0ZURvbWFpbmVzPgoJPC9MaXN0ZUJsYW5jaGVEUklNLU0+"},{"typeMetadata":"RAPPORT_DSS","message":""}],"valide":true}
