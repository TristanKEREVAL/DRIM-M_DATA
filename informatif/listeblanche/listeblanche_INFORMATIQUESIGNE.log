{"erreurs":[],"metaData":[{"typeMetadata":"DATE_SIGNATURE","message":"Tue Apr 30 12:33:45 UTC 2024"},{"typeMetadata":"DN_CERTIFICAT","message":"CN=Liste Blanche DRIM-M,OU=318751275100020,O=AGENCE DU NUMERIQUE EN SANTE,ST=Paris (75),C=FR"},{"typeMetadata":"RAPPORT_DIAGNOSTIQUE","message":""},{"typeMetadata":"DOCUMENT_ORIGINAL_NON_SIGNE","message":"PExpc3RlQmxhbmNoZURSSU0tTSB4bWxucz0iaHR0cHM6Ly9saXN0ZWJsYW5jaGUubWVzaW1hZ2VzbWVkaWNhbGVzLmZyL3NjaGVtYSIgdmVyc2lvbkZvcm1hdD0iMS4wLjAiPgogICAgPERhdGVEZUdlbmVyYXRpb24+MjAyNC0wNC0yMlQxMTowODoxMlo8L0RhdGVEZUdlbmVyYXRpb24+CiAgICA8TGlzdGVEb21haW5lcz4KICAgICAgICA8RG9tYWluZT4KICAgICAgICAgICAgPE5vbT5kYjEuMTExLm1lc2ltYWdlc21lZGljYWxlcy5mcjwvTm9tPgogICAgICAgICAgICA8RGVzY3JpcHRpb24+T3BlcmF0ZXVyIDAxIHRlc3Q8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICA8RE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPkNOPWRiMS4xMTEubWVzaW1hZ2VzbWVkaWNhbGVzLmZyLE9VPTMxNTk4NTEzNTAwMTg3LE89ZWRpdGV1cixTVD1QYXJpcyAoNzUpLEM9RlI8L0ROQ2VydGlmaWNhdE9wZXJhdGV1cj4KICAgICAgICAgICAgPFJlc3BvbnNhYmxlQ29udGFjdD5hbnRvaW5lLnRhcGlzQG9wMDEuZnIsIDA3IDMzIDY1IDE4IDM3PC9SZXNwb25zYWJsZUNvbnRhY3Q+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5hbnRvaW5lLnRhcGlzQG9wMDEuZnIsIDA3IDMzIDY1IDE4IDM3PC9TdXBwb3J0Q29udGFjdD4KICAgICAgICAgICAgPERhdGVNQUo+MjAyNC0wNC0yM1QyMDozNjoxMlo8L0RhdGVNQUo+CiAgICAgICAgPC9Eb21haW5lPgoJCTxEb21haW5lPgogICAgICAgICAgICA8Tm9tPmRiMS4xMTIubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC9Ob20+CiAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5PcGVyYXRldXIgMDEgdGVzdDwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgIDxETkNlcnRpZmljYXRPcGVyYXRldXI+Q049ZGIxLjExMi5tZXNpbWFnZXNtZWRpY2FsZXMuZnIsT1U9NDc5OTg1MTM1MDc4MTAsTz1lZGl0ZXVyLFNUPVBhcmlzICg3NSksQz1GUjwvRE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPgogICAgICAgICAgICA8UmVzcG9uc2FibGVDb250YWN0PmFudG9pbmUudGFwaXNAb3AwMS5mciwgMDcgMzMgNjUgMTggMzc8L1Jlc3BvbnNhYmxlQ29udGFjdD4KICAgICAgICAgICAgPFN1cHBvcnRDb250YWN0PmFudG9pbmUudGFwaXNAb3AwMS5mciwgMDcgMzMgNjUgMTggMzc8L1N1cHBvcnRDb250YWN0PgogICAgICAgICAgICA8RGF0ZU1BSj4yMDI0LTA0LTIzVDIwOjM2OjEyWjwvRGF0ZU1BSj4KICAgICAgICA8L0RvbWFpbmU+CgkJPERvbWFpbmU+CiAgICAgICAgICAgIDxOb20+ZGIxLjM0NS5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L05vbT4KICAgICAgICAgICAgPERlc2NyaXB0aW9uPk9wZXJhdGV1ciAwMiB0ZXN0PC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgPEROQ2VydGlmaWNhdE9wZXJhdGV1cj5DTj1kYjEuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcixPVT00OTE4ODM5NzEwMDAzOSxPPWVkaXRldXIsU1Q9TWFyc2VpbGxlICgxMyksQz1GUjwvRE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPgogICAgICAgICAgICA8UmVzcG9uc2FibGVDb250YWN0PmhlbnJpLmJlY2tAb3AwMi5jb20sIDA2IDMyIDQ0IDA5IDA5PC9SZXNwb25zYWJsZUNvbnRhY3Q+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5oZW5yaS5iZWNrQG9wMDIuY29tLCAwNiAzMiA0NCAwOSAwOTwvU3VwcG9ydENvbnRhY3Q+CiAgICAgICAgICAgIDxEYXRlTUFKPjIwMjQtMDQtMjNUMjA6MzY6MTJaPC9EYXRlTUFKPgogICAgICAgIDwvRG9tYWluZT4KCQk8RG9tYWluZT4KICAgICAgICAgICAgPE5vbT5kYjIuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcjwvTm9tPgogICAgICAgICAgICA8RGVzY3JpcHRpb24+T3BlcmF0ZXVyIDAyIHRlc3Q8L0Rlc2NyaXB0aW9uPgogICAgICAgICAgICA8RE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPkNOPWRiMi4zNDUubWVzaW1hZ2VzbWVkaWNhbGVzLmZyLE9VPTQ5MTg4Mzk3MTAwMDM5LE89ZWRpdGV1cixTVD1NYXJzZWlsbGUgKDEzKSxDPUZSPC9ETkNlcnRpZmljYXRPcGVyYXRldXI+CiAgICAgICAgICAgIDxSZXNwb25zYWJsZUNvbnRhY3Q+aGVucmkuYmVja0BvcDAyLmNvbSwgMDYgMzIgNDQgMDkgMDk8L1Jlc3BvbnNhYmxlQ29udGFjdD4KICAgICAgICAgICAgPFN1cHBvcnRDb250YWN0PmhlbnJpLmJlY2tAb3AwMi5jb20sIDA2IDMyIDQ0IDA5IDA5PC9TdXBwb3J0Q29udGFjdD4KICAgICAgICAgICAgPERhdGVNQUo+MjAyNC0wNC0yM1QyMDozNjoxMlo8L0RhdGVNQUo+CiAgICAgICAgPC9Eb21haW5lPgoJCTxEb21haW5lPgogICAgICAgICAgICA8Tm9tPmRiMS44NjcubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC9Ob20+CiAgICAgICAgICAgIDxEZXNjcmlwdGlvbj5PcGVyYXRldXIgMDMgdGVzdDwvRGVzY3JpcHRpb24+CiAgICAgICAgICAgIDxETkNlcnRpZmljYXRPcGVyYXRldXI+Q049ZGIxLjg2Ny5tZXNpbWFnZXNtZWRpY2FsZXMuZnIsT1U9MzE5NTQ1MjM3MDA3NjUsTz1lZGl0ZXVyLFNUPUx5b24oNjkpLEM9RlI8L0ROQ2VydGlmaWNhdE9wZXJhdGV1cj4KICAgICAgICAgICAgPFJlc3BvbnNhYmxlQ29udGFjdD5qdWxpZW4uZm9udG9pc0BvcDAzLmZyLCAwNiA0NCA4NyA5OCAwNzwvUmVzcG9uc2FibGVDb250YWN0PgogICAgICAgICAgICA8U3VwcG9ydENvbnRhY3Q+anVsaWVuLmZvbnRvaXNAb3AwMy5mciwgMDYgNDQgODcgOTggMDc8L1N1cHBvcnRDb250YWN0PgogICAgICAgICAgICA8RGF0ZU1BSj4yMDI0LTA0LTI1VDA5OjI0OjEyWjwvRGF0ZU1BSj4KICAgICAgICA8L0RvbWFpbmU+CgkJPERvbWFpbmU+CiAgICAgICAgICAgIDxOb20+ZGIyLjg2Ny5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L05vbT4KICAgICAgICAgICAgPERlc2NyaXB0aW9uPk9wZXJhdGV1ciAwMyB0ZXN0PC9EZXNjcmlwdGlvbj4KICAgICAgICAgICAgPEROQ2VydGlmaWNhdE9wZXJhdGV1cj5DTj1kYjIuODY3Lm1lc2ltYWdlc21lZGljYWxlcy5mcixPVT0zMTk1NDUyMzcwMDc2NSxPPWVkaXRldXIsU1Q9THlvbig2OSksQz1GUjwvRE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPgogICAgICAgICAgICA8UmVzcG9uc2FibGVDb250YWN0Pmp1bGllbi5mb250b2lzQG9wMDMuZnIsIDA2IDQ0IDg3IDk4IDA3PC9SZXNwb25zYWJsZUNvbnRhY3Q+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5qdWxpZW4uZm9udG9pc0BvcDAzLmZyLCAwNiA0NCA4NyA5OCAwNzwvU3VwcG9ydENvbnRhY3Q+CiAgICAgICAgICAgIDxEYXRlTUFKPjIwMjQtMDQtMjVUMDk6MjQ6MTJaPC9EYXRlTUFKPgogICAgICAgIDwvRG9tYWluZT4KICAgIDwvTGlzdGVEb21haW5lcz4KCTwvTGlzdGVCbGFuY2hlRFJJTS1NPg=="},{"typeMetadata":"RAPPORT_DSS","message":""}],"valide":true}