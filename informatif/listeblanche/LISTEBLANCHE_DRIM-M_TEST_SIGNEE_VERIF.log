{"erreurs":[],"metaData":[{"typeMetadata":"DATE_SIGNATURE","message":"Fri Jul 12 05:37:19 UTC 2024"},{"typeMetadata":"DN_CERTIFICAT","message":"CN=Liste Blanche DRIM-M,OU=318751275100020,O=AGENCE DU NUMERIQUE EN SANTE,ST=Paris (75),C=FR"},{"typeMetadata":"RAPPORT_DIAGNOSTIQUE","message":""},{"typeMetadata":"DOCUMENT_ORIGINAL_NON_SIGNE","message":"PExpc3RlQmxhbmNoZURSSU0tTSB4bWxucz0iaHR0cHM6Ly9saXN0ZWJsYW5jaGUubWVzaW1hZ2VzbWVkaWNhbGVzLmZyL3NjaGVtYSIgdmVyc2lvbkZvcm1hdD0iMS4wLjAiPgogICAgPERhdGVEZUdlbmVyYXRpb24+MjAyNC0wNC0yMlQxMTowODoxMlo8L0RhdGVEZUdlbmVyYXRpb24+CiAgICA8TGlzdGVEb21haW5lcz4KICAgICAgICA8RG9tYWluZT4KCQkgICAgPElkZW50aWZpYW50PjE8L0lkZW50aWZpYW50PgogICAgICAgICAgICA8ZGI+ZGIxLjExMS5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L2RiPgoJCQk8dmk+dmkxLjExMS5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L3ZpPgogICAgICAgICAgICA8RGVub21pbmF0aW9uPk9wZXJhdGV1ciAwMSB0ZXN0PC9EZW5vbWluYXRpb24+CiAgICAgICAgICAgIDxETkNlcnRpZmljYXRPcGVyYXRldXI+Q049ZGIxLjExMS5tZXNpbWFnZXNtZWRpY2FsZXMuZnIsT1U9MzE1OTg1MTM1MDAxODcsTz1lZGl0ZXVyLFNUPVBhcmlzICg3NSksQz1GUjwvRE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPgogICAgICAgICAgICA8UmVzcG9uc2FibGVDb250YWN0PmFudG9pbmUudGFwaXNAb3AwMS5mciwgMDcgMzMgNjUgMTggMzc8L1Jlc3BvbnNhYmxlQ29udGFjdD4KICAgICAgICAgICAgPFN1cHBvcnRDb250YWN0PmFudG9pbmUudGFwaXNAb3AwMS5mciwgMDcgMzMgNjUgMTggMzc8L1N1cHBvcnRDb250YWN0PgogICAgICAgICAgICA8RGF0ZU1BSj4yMDI0LTA0LTIzVDIwOjM2OjEyWjwvRGF0ZU1BSj4KICAgICAgICA8L0RvbWFpbmU+CgkJPERvbWFpbmU+CgkJICAgIDxJZGVudGlmaWFudD4xPC9JZGVudGlmaWFudD4KICAgICAgICAgICAgPGRiPmRiMS4xMTIubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC9kYj4KCQkJPHZpPmRiMS4xMTIubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC92aT4KICAgICAgICAgICAgPERlbm9taW5hdGlvbj5PcGVyYXRldXIgMDEgdGVzdDwvRGVub21pbmF0aW9uPgogICAgICAgICAgICA8RE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPkNOPWRiMS4xMTIubWVzaW1hZ2VzbWVkaWNhbGVzLmZyLE9VPTQ3OTk4NTEzNTA3ODEwLE89ZWRpdGV1cixTVD1QYXJpcyAoNzUpLEM9RlI8L0ROQ2VydGlmaWNhdE9wZXJhdGV1cj4KICAgICAgICAgICAgPFJlc3BvbnNhYmxlQ29udGFjdD5hbnRvaW5lLnRhcGlzQG9wMDEuZnIsIDA3IDMzIDY1IDE4IDM3PC9SZXNwb25zYWJsZUNvbnRhY3Q+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5hbnRvaW5lLnRhcGlzQG9wMDEuZnIsIDA3IDMzIDY1IDE4IDM3PC9TdXBwb3J0Q29udGFjdD4KICAgICAgICAgICAgPERhdGVNQUo+MjAyNC0wNC0yM1QyMDozNjoxMlo8L0RhdGVNQUo+CiAgICAgICAgPC9Eb21haW5lPgoJCTxEb21haW5lPgoJCSAgICA8SWRlbnRpZmlhbnQ+MjwvSWRlbnRpZmlhbnQ+CiAgICAgICAgICAgIDxkYj5kYjEuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcjwvZGI+CgkJCTx2aT5kYjEuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcjwvdmk+CiAgICAgICAgICAgIDxEZW5vbWluYXRpb24+T3BlcmF0ZXVyIDAyIHRlc3Q8L0Rlbm9taW5hdGlvbj4KICAgICAgICAgICAgPEROQ2VydGlmaWNhdE9wZXJhdGV1cj5DTj1kYjEuMzQ1Lm1lc2ltYWdlc21lZGljYWxlcy5mcixPVT00OTE4ODM5NzEwMDAzOSxPPWVkaXRldXIsU1Q9TWFyc2VpbGxlICgxMyksQz1GUjwvRE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPgogICAgICAgICAgICA8UmVzcG9uc2FibGVDb250YWN0PmhlbnJpLmJlY2tAb3AwMi5jb20sIDA2IDMyIDQ0IDA5IDA5PC9SZXNwb25zYWJsZUNvbnRhY3Q+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5oZW5yaS5iZWNrQG9wMDIuY29tLCAwNiAzMiA0NCAwOSAwOTwvU3VwcG9ydENvbnRhY3Q+CiAgICAgICAgICAgIDxEYXRlTUFKPjIwMjQtMDQtMjNUMjA6MzY6MTJaPC9EYXRlTUFKPgogICAgICAgIDwvRG9tYWluZT4KCQk8RG9tYWluZT4KCQkgICAgPElkZW50aWZpYW50PjI8L0lkZW50aWZpYW50PgogICAgICAgICAgICA8ZGI+ZGIyLjM0NS5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L2RiPgoJCQk8dmk+dmkyLjM0NS5tZXNpbWFnZXNtZWRpY2FsZXMuZnI8L3ZpPgogICAgICAgICAgICA8RGVub21pbmF0aW9uPk9wZXJhdGV1ciAwMiB0ZXN0PC9EZW5vbWluYXRpb24+CiAgICAgICAgICAgIDxETkNlcnRpZmljYXRPcGVyYXRldXI+Q049ZGIyLjM0NS5tZXNpbWFnZXNtZWRpY2FsZXMuZnIsT1U9NDkxODgzOTcxMDAwMzksTz1lZGl0ZXVyLFNUPU1hcnNlaWxsZSAoMTMpLEM9RlI8L0ROQ2VydGlmaWNhdE9wZXJhdGV1cj4KICAgICAgICAgICAgPFJlc3BvbnNhYmxlQ29udGFjdD5oZW5yaS5iZWNrQG9wMDIuY29tLCAwNiAzMiA0NCAwOSAwOTwvUmVzcG9uc2FibGVDb250YWN0PgogICAgICAgICAgICA8U3VwcG9ydENvbnRhY3Q+aGVucmkuYmVja0BvcDAyLmNvbSwgMDYgMzIgNDQgMDkgMDk8L1N1cHBvcnRDb250YWN0PgogICAgICAgICAgICA8RGF0ZU1BSj4yMDI0LTA0LTIzVDIwOjM2OjEyWjwvRGF0ZU1BSj4KICAgICAgICA8L0RvbWFpbmU+CgkJPERvbWFpbmU+CgkJICAgIDxJZGVudGlmaWFudD4zPC9JZGVudGlmaWFudD4KICAgICAgICAgICAgPGRiPmRiMS44NjcubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC9kYj4KCQkJPHZpPnZpMS44NjcubWVzaW1hZ2VzbWVkaWNhbGVzLmZyPC92aT4KICAgICAgICAgICAgPERlbm9taW5hdGlvbj5PcGVyYXRldXIgMDMgdGVzdDwvRGVub21pbmF0aW9uPgogICAgICAgICAgICA8RE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPkNOPWRiMS44NjcubWVzaW1hZ2VzbWVkaWNhbGVzLmZyLE9VPTMxOTU0NTIzNzAwNzY1LE89ZWRpdGV1cixTVD1MeW9uKDY5KSxDPUZSPC9ETkNlcnRpZmljYXRPcGVyYXRldXI+CiAgICAgICAgICAgIDxSZXNwb25zYWJsZUNvbnRhY3Q+anVsaWVuLmZvbnRvaXNAb3AwMy5mciwgMDYgNDQgODcgOTggMDc8L1Jlc3BvbnNhYmxlQ29udGFjdD4KICAgICAgICAgICAgPFN1cHBvcnRDb250YWN0Pmp1bGllbi5mb250b2lzQG9wMDMuZnIsIDA2IDQ0IDg3IDk4IDA3PC9TdXBwb3J0Q29udGFjdD4KICAgICAgICAgICAgPERhdGVNQUo+MjAyNC0wNC0yNVQwOToyNDoxMlo8L0RhdGVNQUo+CiAgICAgICAgPC9Eb21haW5lPgoJCTxEb21haW5lPgoJCSAgICA8SWRlbnRpZmlhbnQ+MzwvSWRlbnRpZmlhbnQ+CiAgICAgICAgICAgIDxkYj5kYjIuODY3Lm1lc2ltYWdlc21lZGljYWxlcy5mcjwvZGI+CgkJCTx2aT52aTIuODY3Lm1lc2ltYWdlc21lZGljYWxlcy5mcjwvdmk+CiAgICAgICAgICAgIDxEZW5vbWluYXRpb24+T3BlcmF0ZXVyIDAzIHRlc3Q8L0Rlbm9taW5hdGlvbj4KICAgICAgICAgICAgPEROQ2VydGlmaWNhdE9wZXJhdGV1cj5DTj1kYjIuODY3Lm1lc2ltYWdlc21lZGljYWxlcy5mcixPVT0zMTk1NDUyMzcwMDc2NSxPPWVkaXRldXIsU1Q9THlvbig2OSksQz1GUjwvRE5DZXJ0aWZpY2F0T3BlcmF0ZXVyPgogICAgICAgICAgICA8UmVzcG9uc2FibGVDb250YWN0Pmp1bGllbi5mb250b2lzQG9wMDMuZnIsIDA2IDQ0IDg3IDk4IDA3PC9SZXNwb25zYWJsZUNvbnRhY3Q+CiAgICAgICAgICAgIDxTdXBwb3J0Q29udGFjdD5qdWxpZW4uZm9udG9pc0BvcDAzLmZyLCAwNiA0NCA4NyA5OCAwNzwvU3VwcG9ydENvbnRhY3Q+CiAgICAgICAgICAgIDxEYXRlTUFKPjIwMjQtMDQtMjVUMDk6MjQ6MTJaPC9EYXRlTUFKPgogICAgICAgIDwvRG9tYWluZT4KICAgIDwvTGlzdGVEb21haW5lcz4KCTwvTGlzdGVCbGFuY2hlRFJJTS1NPg=="},{"typeMetadata":"RAPPORT_DSS","message":"PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiIHN0YW5kYWxvbmU9InllcyI/Pgo8RGV0YWlsZWRSZXBvcnQgVmFsaWRhdGlvblRpbWU9IjIwMjQtMDctMTJUMDc6MDU6MjdaIiB4bWxucz0iaHR0cDovL2Rzcy5lc2lnLmV1cm9wYS5ldS92YWxpZGF0aW9uL2RldGFpbGVkLXJlcG9ydCI+CiAgICA8U2lnbmF0dXJlIElkPSJTLTdCQThGMDc5OUIwMUM5RTRGMTE2QzQ3NzkzRDY5NEIyNTRDRjU1MTA2MEEwN0Q4NzM0QkY1QjEyQjM1OTM1QTgiPgogICAgICAgIDxWYWxpZGF0aW9uUHJvY2Vzc0Jhc2ljU2lnbmF0dXJlIFRpdGxlPSJWYWxpZGF0aW9uIFByb2Nlc3MgZm9yIEJhc2ljIFNpZ25hdHVyZXMiPgogICAgICAgICAgICA8Q29uc3RyYWludCBJZD0iUy03QkE4RjA3OTlCMDFDOUU0RjExNkM0Nzc5M0Q2OTRCMjU0Q0Y1NTEwNjBBMDdEODczNEJGNUIxMkIzNTkzNUE4LUZDIj4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQlNWX0lGQ1JDIj5JcyB0aGUgcmVzdWx0IG9mIHRoZSAnRm9ybWF0IENoZWNraW5nJyBidWlsZGluZyBibG9jayBjb25jbHVzaXZlPzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uc3RyYWludCBJZD0iUy03QkE4RjA3OTlCMDFDOUU0RjExNkM0Nzc5M0Q2OTRCMjU0Q0Y1NTEwNjBBMDdEODczNEJGNUIxMkIzNTkzNUE4LUlTQyI+CiAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJTVl9JSVNDUkMiPklzIHRoZSByZXN1bHQgb2YgdGhlICdJZGVudGlmaWNhdGlvbiBvZiBTaWduaW5nIENlcnRpZmljYXRlJyBidWlsZGluZyBibG9jayBjb25jbHVzaXZlPzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uc3RyYWludCBJZD0iUy03QkE4RjA3OTlCMDFDOUU0RjExNkM0Nzc5M0Q2OTRCMjU0Q0Y1NTEwNjBBMDdEODczNEJGNUIxMkIzNTkzNUE4LVZDSSI+CiAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJTVl9JVkNJUkMiPklzIHRoZSByZXN1bHQgb2YgdGhlICdWYWxpZGF0aW9uIENvbnRleHQgSW5pdGlhbGl6YXRpb24nIGJ1aWxkaW5nIGJsb2NrIGNvbmNsdXNpdmU/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50IElkPSJTLTdCQThGMDc5OUIwMUM5RTRGMTE2QzQ3NzkzRDY5NEIyNTRDRjU1MTA2MEEwN0Q4NzM0QkY1QjEyQjM1OTM1QTgtWENWIj4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQlNWX0lYQ1ZSQyI+SXMgdGhlIHJlc3VsdCBvZiB0aGUgJ1guNTA5IENlcnRpZmljYXRlIFZhbGlkYXRpb24nIGJ1aWxkaW5nIGJsb2NrIGNvbmNsdXNpdmU/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50IElkPSJTLTdCQThGMDc5OUIwMUM5RTRGMTE2QzQ3NzkzRDY5NEIyNTRDRjU1MTA2MEEwN0Q4NzM0QkY1QjEyQjM1OTM1QTgtQ1YiPgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCU1ZfSUNWUkMiPklzIHRoZSByZXN1bHQgb2YgdGhlICdDcnlwdG9ncmFwaGljIFZlcmlmaWNhdGlvbicgYnVpbGRpbmcgYmxvY2sgY29uY2x1c2l2ZT88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgPENvbnN0cmFpbnQgSWQ9IlMtN0JBOEYwNzk5QjAxQzlFNEYxMTZDNDc3OTNENjk0QjI1NENGNTUxMDYwQTA3RDg3MzRCRjVCMTJCMzU5MzVBOC1TQVYiPgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCU1ZfSVNBVlJDIj5JcyB0aGUgcmVzdWx0IG9mIHRoZSAnU2lnbmF0dXJlIEFjY2VwdGFuY2UgVmFsaWRhdGlvbicgYnVpbGRpbmcgYmxvY2sgY29uY2x1c2l2ZT88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgPENvbmNsdXNpb24+CiAgICAgICAgICAgICAgICA8SW5kaWNhdGlvbj5QQVNTRUQ8L0luZGljYXRpb24+CiAgICAgICAgICAgIDwvQ29uY2x1c2lvbj4KICAgICAgICAgICAgPFByb29mT2ZFeGlzdGVuY2U+CiAgICAgICAgICAgICAgICA8VGltZT4yMDI0LTA3LTEyVDA3OjA1OjI3WjwvVGltZT4KICAgICAgICAgICAgPC9Qcm9vZk9mRXhpc3RlbmNlPgogICAgICAgIDwvVmFsaWRhdGlvblByb2Nlc3NCYXNpY1NpZ25hdHVyZT4KICAgICAgICA8VmFsaWRhdGlvblNpZ25hdHVyZVF1YWxpZmljYXRpb24gU2lnbmF0dXJlUXVhbGlmaWNhdGlvbj0iTi9BIiBUaXRsZT0iU2lnbmF0dXJlIFF1YWxpZmljYXRpb24iPgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iUVVBTF9JU19BREVTIj5JcyB0aGUgc2lnbmF0dXJlL3NlYWwgYW4gYWNjZXB0YWJsZSBBZEVTIGRpZ2l0YWwgc2lnbmF0dXJlIChFVFNJIEVOIDMxOSAxMDItMSk/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJRVUFMX0NFUlRfVFJVU1RFRF9MSVNUX1JFQUNIRUQiPkhhcyBhIHRydXN0ZWQgbGlzdCBiZWVuIHJlYWNoZWQgZm9yIHRoZSBjZXJ0aWZpY2F0ZSBjaGFpbj88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk5PVCBPSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPEVycm9yIEtleT0iUVVBTF9DRVJUX1RSVVNURURfTElTVF9SRUFDSEVEX0FOUyI+VW5hYmxlIHRvIGJ1aWxkIGEgY2VydGlmaWNhdGUgY2hhaW4gdXAgdG8gYSB0cnVzdGVkIGxpc3QhPC9FcnJvcj4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uY2x1c2lvbj4KICAgICAgICAgICAgICAgIDxJbmRpY2F0aW9uPkZBSUxFRDwvSW5kaWNhdGlvbj4KICAgICAgICAgICAgICAgIDxFcnJvcnMgS2V5PSJRVUFMX0NFUlRfVFJVU1RFRF9MSVNUX1JFQUNIRURfQU5TIj5VbmFibGUgdG8gYnVpbGQgYSBjZXJ0aWZpY2F0ZSBjaGFpbiB1cCB0byBhIHRydXN0ZWQgbGlzdCE8L0Vycm9ycz4KICAgICAgICAgICAgPC9Db25jbHVzaW9uPgogICAgICAgIDwvVmFsaWRhdGlvblNpZ25hdHVyZVF1YWxpZmljYXRpb24+CiAgICAgICAgPENvbmNsdXNpb24+CiAgICAgICAgICAgIDxJbmRpY2F0aW9uPlRPVEFMX1BBU1NFRDwvSW5kaWNhdGlvbj4KICAgICAgICA8L0NvbmNsdXNpb24+CiAgICA8L1NpZ25hdHVyZT4KICAgIDxCYXNpY0J1aWxkaW5nQmxvY2tzIElkPSJTLTdCQThGMDc5OUIwMUM5RTRGMTE2QzQ3NzkzRDY5NEIyNTRDRjU1MTA2MEEwN0Q4NzM0QkY1QjEyQjM1OTM1QTgiIFR5cGU9IlNJR05BVFVSRSI+CiAgICAgICAgPEZDIFRpdGxlPSJGb3JtYXQgQ2hlY2tpbmciPgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX0ZDX0lFRkYiPkRvZXMgdGhlIHNpZ25hdHVyZSBmb3JtYXQgY29ycmVzcG9uZCB0byBhbiBleHBlY3RlZCBmb3JtYXQ/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfRkNfSVNSSUEiPklzIHRoZSBzaWduZWQgcmVmZXJlbmNlcyBpZGVudGlmaWNhdGlvbiBub3QgYW1iaWd1b3VzPzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uY2x1c2lvbj4KICAgICAgICAgICAgICAgIDxJbmRpY2F0aW9uPlBBU1NFRDwvSW5kaWNhdGlvbj4KICAgICAgICAgICAgPC9Db25jbHVzaW9uPgogICAgICAgIDwvRkM+CiAgICAgICAgPElTQyBUaXRsZT0iSWRlbnRpZmljYXRpb24gb2YgdGhlIFNpZ25pbmcgQ2VydGlmaWNhdGUiPgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX0lDU19JU0NJIj5JcyB0aGVyZSBhbiBpZGVudGlmaWVkIGNhbmRpZGF0ZSBmb3IgdGhlIHNpZ25pbmcgY2VydGlmaWNhdGU/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfSUNTX0lTQUNEUCI+SXMgdGhlIHNpZ25lZCBhdHRyaWJ1dGU6ICdjZXJ0LWRpZ2VzdCcgb2YgdGhlIGNlcnRpZmljYXRlIHByZXNlbnQ/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfSUNTX0lDRFZWIj5Eb2VzIHRoZSBjZXJ0aWZpY2F0ZSBkaWdlc3QgdmFsdWUgbWF0Y2ggYSBkaWdlc3QgdmFsdWUgZm91bmQgaW4gdGhlIGNlcnRpZmljYXRlIHJlZmVyZW5jZShzKT88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJCQl9JQ1NfQUlETkFTTkUiPkFyZSB0aGUgaXNzdWVyIGRpc3Rpbmd1aXNoZWQgbmFtZSBhbmQgdGhlIHNlcmlhbCBudW1iZXIgZXF1YWw/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25jbHVzaW9uPgogICAgICAgICAgICAgICAgPEluZGljYXRpb24+UEFTU0VEPC9JbmRpY2F0aW9uPgogICAgICAgICAgICA8L0NvbmNsdXNpb24+CiAgICAgICAgICAgIDxDZXJ0aWZpY2F0ZUNoYWluPgogICAgICAgICAgICAgICAgPENoYWluSXRlbSBJZD0iQy0xMjQzNDQxN0Y3MTFBM0I2NDY0RTUzNzc4REEwMzA4REYwMzlCMDhCRjE2MDFENjlGMjIzNjAwNTIwRDRERUI0Ij4KICAgICAgICAgICAgICAgICAgICA8U291cmNlPlNJR05BVFVSRTwvU291cmNlPgogICAgICAgICAgICAgICAgPC9DaGFpbkl0ZW0+CiAgICAgICAgICAgICAgICA8Q2hhaW5JdGVtIElkPSJDLURDNTI4RTM3ODg2OTFCM0Y3OTUwMTY0MDc2Rjk1QjAyQzY0MzM0QzY4NjYyQkRFREU1NzUwQjRFMEU1MzM4RjYiPgogICAgICAgICAgICAgICAgICAgIDxTb3VyY2U+VFJVU1RFRF9TVE9SRTwvU291cmNlPgogICAgICAgICAgICAgICAgPC9DaGFpbkl0ZW0+CiAgICAgICAgICAgICAgICA8Q2hhaW5JdGVtIElkPSJDLTAxMzI1QUVCMTkzODcxRUVDOTBGQTg5NTU2ODA0RTQxODVDQjM2MkUwQ0E4N0EzRDc5OTM5QzcxMTg2REE4MDUiPgogICAgICAgICAgICAgICAgICAgIDxTb3VyY2U+VFJVU1RFRF9TVE9SRTwvU291cmNlPgogICAgICAgICAgICAgICAgPC9DaGFpbkl0ZW0+CiAgICAgICAgICAgIDwvQ2VydGlmaWNhdGVDaGFpbj4KICAgICAgICA8L0lTQz4KICAgICAgICA8VkNJIFRpdGxlPSJWYWxpZGF0aW9uIENvbnRleHQgSW5pdGlhbGl6YXRpb24iPgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1ZDSV9JU1BLIj5JcyB0aGUgc2lnbmF0dXJlIHBvbGljeSBrbm93bj88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgPENvbmNsdXNpb24+CiAgICAgICAgICAgICAgICA8SW5kaWNhdGlvbj5QQVNTRUQ8L0luZGljYXRpb24+CiAgICAgICAgICAgIDwvQ29uY2x1c2lvbj4KICAgICAgICA8L1ZDST4KICAgICAgICA8WENWIFRpdGxlPSJYNTA5IENlcnRpZmljYXRlIFZhbGlkYXRpb24iPgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1hDVl9DQ0NCQiI+Q2FuIHRoZSBjZXJ0aWZpY2F0ZSBjaGFpbiBiZSBidWlsdCB0aWxsIGEgdHJ1c3QgYW5jaG9yPzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uc3RyYWludCBJZD0iQy0xMjQzNDQxN0Y3MTFBM0I2NDY0RTUzNzc4REEwMzA4REYwMzlCMDhCRjE2MDFENjlGMjIzNjAwNTIwRDRERUI0IiBCbG9ja1R5cGU9IlNVQl9YQ1YiPgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX1NVQiI+SXMgdGhlIGNlcnRpZmljYXRlIHZhbGlkYXRpb24gY29uY2x1c2l2ZT88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgPENvbnN0cmFpbnQgSWQ9IkMtREM1MjhFMzc4ODY5MUIzRjc5NTAxNjQwNzZGOTVCMDJDNjQzMzRDNjg2NjJCREVERTU3NTBCNEUwRTUzMzhGNiIgQmxvY2tUeXBlPSJTVUJfWENWIj4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1hDVl9TVUIiPklzIHRoZSBjZXJ0aWZpY2F0ZSB2YWxpZGF0aW9uIGNvbmNsdXNpdmU/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25jbHVzaW9uPgogICAgICAgICAgICAgICAgPEluZGljYXRpb24+UEFTU0VEPC9JbmRpY2F0aW9uPgogICAgICAgICAgICA8L0NvbmNsdXNpb24+CiAgICAgICAgICAgIDxTdWJYQ1YgSWQ9IkMtMTI0MzQ0MTdGNzExQTNCNjQ2NEU1Mzc3OERBMDMwOERGMDM5QjA4QkYxNjAxRDY5RjIyMzYwMDUyMEQ0REVCNCIgVHJ1c3RBbmNob3I9ImZhbHNlIiBTZWxmU2lnbmVkPSJmYWxzZSIgVGl0bGU9IkNlcnRpZmljYXRlIj4KICAgICAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iUVVBTF9VTklRVUVfQ0VSVCI+SXMgdGhlIGNlcnRpZmljYXRlIHVuaXF1ZT88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX1BTRVVET19VU0UiPklzIGEgcHNldWRvbnltIHVzZWQ/PC9OYW1lPgogICAgICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1hDVl9JU05TU0MiPklzIGNlcnRpZmljYXRlIG5vdCBzZWxmLXNpZ25lZD88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX0lDU0kiPklzIHRoZSBjZXJ0aWZpY2F0ZSBzaWduYXR1cmUgaW50YWN0PzwvTmFtZT4KICAgICAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJCQl9YQ1ZfSVNDR0tVIj5Eb2VzIHRoZSBjZXJ0aWZpY2F0ZSBoYXZlIGFuIGV4cGVjdGVkIGtleS11c2FnZT88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgICAgIDxBZGRpdGlvbmFsSW5mbz5LZXkgdXNhZ2UgOiBbRElHSVRBTF9TSUdOQVRVUkUsIE5PTl9SRVBVRElBVElPTl08L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX0FJQV9QUkVTIj5JcyB0aGUgYXV0aG9yaXR5IGluZm8gYWNjZXNzIHByZXNlbnQ/PC9OYW1lPgogICAgICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1hDVl9SRVZPQ19QUkVTIj5JcyB0aGUgcmV2b2NhdGlvbiBpbmZvIGFjY2VzcyBwcmVzZW50PzwvTmFtZT4KICAgICAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJCQl9YQ1ZfSVJEUEZDIj5JcyB0aGUgcmV2b2NhdGlvbiBkYXRhIHByZXNlbnQgZm9yIHRoZSBjZXJ0aWZpY2F0ZT88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX0lTQ1IiPklzIHRoZSBjZXJ0aWZpY2F0ZSBub3QgcmV2b2tlZD88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX0lTQ09IIj5JcyB0aGUgY2VydGlmaWNhdGUgbm90IG9uIGhvbGQ/PC9OYW1lPgogICAgICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxDb25zdHJhaW50IElkPSJSLUU0RTE4NTcxOUMxNUQ2MjdFQzE2MDVDQUY1Q0RGNjkwRDdFNEY3MTg0MkVCOUVDMzIyQkM1MjlFODU0OUU1OTgiIEJsb2NrVHlwZT0iUkZDIj4KICAgICAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJCQl9YQ1ZfUkZDIj5JcyB0aGUgcmV2b2NhdGlvbiBmcmVzaG5lc3MgY2hlY2sgY29uY2x1c2l2ZT88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgICAgIDxBZGRpdGlvbmFsSW5mbz5JZCA9IFItRTRFMTg1NzE5QzE1RDYyN0VDMTYwNUNBRjVDREY2OTBEN0U0RjcxODQyRUI5RUMzMjJCQzUyOUU4NTQ5RTU5ODwvQWRkaXRpb25hbEluZm8+CiAgICAgICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkFDQ00iPkFyZSBjcnlwdG9ncmFwaGljIGNvbnN0cmFpbnRzIG1ldCBmb3IgdGhlIHNpZ25hdHVyZSdzIGNlcnRpZmljYXRlIGNoYWluPzwvTmFtZT4KICAgICAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPlNpZ25hdHVyZSBhbGdvcml0aG0gUlNBIHdpdGggU0hBMjU2IHdpdGgga2V5IHNpemUgNDA5NiBhdCB2YWxpZGF0aW9uIHRpbWUgOiAyMDI0LTA3LTEyIDA3OjA1PC9BZGRpdGlvbmFsSW5mbz4KICAgICAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1hDVl9JQ1RJVlJTQyI+SXMgdGhlIGN1cnJlbnQgdGltZSBpbiB0aGUgdmFsaWRpdHkgcmFuZ2Ugb2YgdGhlIHNpZ25lcidzIGNlcnRpZmljYXRlPzwvTmFtZT4KICAgICAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPlZhbGlkYXRpb24gdGltZSA6IDIwMjQtMDctMTIgMDc6MDUsIGNlcnRpZmljYXRlIHZhbGlkaXR5IDogMjAyMy0wOS0xMiAxMDowMCAtIDIwMjYtMDktMTIgMTA6MDA8L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJQU1ZfSUNSRElUIj5JcyB0aGUgY2VydGlmaWNhdGUgb2YgcmV2b2NhdGlvbiBkYXRhIGlzc3VlciB0cnVzdGVkPzwvTmFtZT4KICAgICAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPkNlcnRpZmljYXRlIElkID0gQy1EQzUyOEUzNzg4NjkxQjNGNzk1MDE2NDA3NkY5NUIwMkM2NDMzNEM2ODY2MkJERURFNTc1MEI0RTBFNTMzOEY2PC9BZGRpdGlvbmFsSW5mbz4KICAgICAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxDb25jbHVzaW9uPgogICAgICAgICAgICAgICAgICAgIDxJbmRpY2F0aW9uPlBBU1NFRDwvSW5kaWNhdGlvbj4KICAgICAgICAgICAgICAgIDwvQ29uY2x1c2lvbj4KICAgICAgICAgICAgICAgIDxDUlMgSWQ9IkMtMTI0MzQ0MTdGNzExQTNCNjQ2NEU1Mzc3OERBMDMwOERGMDM5QjA4QkYxNjAxRDY5RjIyMzYwMDUyMEQ0REVCNCIgTGF0ZXN0QWNjZXB0YWJsZVJldm9jYXRpb25JZD0iUi1FNEUxODU3MTlDMTVENjI3RUMxNjA1Q0FGNUNERjY5MEQ3RTRGNzE4NDJFQjlFQzMyMkJDNTI5RTg1NDlFNTk4IiBUaXRsZT0iQ2VydGlmaWNhdGUgUmV2b2NhdGlvbiBEYXRhIFNlbGVjdG9yIj4KICAgICAgICAgICAgICAgICAgICA8Q29uc3RyYWludCBJZD0iUi1FNEUxODU3MTlDMTVENjI3RUMxNjA1Q0FGNUNERjY5MEQ3RTRGNzE4NDJFQjlFQzMyMkJDNTI5RTg1NDlFNTk4IiBCbG9ja1R5cGU9IlJBQyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1hDVl9SQUMiPklzIHRoZSByZXZvY2F0aW9uIGFjY2VwdGFuY2UgY2hlY2sgY29uY2x1c2l2ZT88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPklkID0gUi1FNEUxODU3MTlDMTVENjI3RUMxNjA1Q0FGNUNERjY5MEQ3RTRGNzE4NDJFQjlFQzMyMkJDNTI5RTg1NDlFNTk4LCB0aGlzVXBkYXRlID0gMjAyNC0wNy0xMCAyMjowMCwgcHJvZHVjdGlvbiB0aW1lID0gMjAyNC0wNy0xMCAyMjowMDwvQWRkaXRpb25hbEluZm8+CiAgICAgICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJCQl9YQ1ZfSUFSRFBGQyI+SXMgYW4gYWNjZXB0YWJsZSByZXZvY2F0aW9uIGRhdGEgcHJlc2VudCBmb3IgdGhlIGNlcnRpZmljYXRlPzwvTmFtZT4KICAgICAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgICAgICAgICA8QWRkaXRpb25hbEluZm8+TGF0ZXN0IGFjY2VwdGFibGUgcmV2b2NhdGlvbiA6IFItRTRFMTg1NzE5QzE1RDYyN0VDMTYwNUNBRjVDREY2OTBEN0U0RjcxODQyRUI5RUMzMjJCQzUyOUU4NTQ5RTU5ODwvQWRkaXRpb25hbEluZm8+CiAgICAgICAgICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgIDxDb25jbHVzaW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8SW5kaWNhdGlvbj5QQVNTRUQ8L0luZGljYXRpb24+CiAgICAgICAgICAgICAgICAgICAgPC9Db25jbHVzaW9uPgogICAgICAgICAgICAgICAgICAgIDxSQUMgSWQ9IlItRTRFMTg1NzE5QzE1RDYyN0VDMTYwNUNBRjVDREY2OTBEN0U0RjcxODQyRUI5RUMzMjJCQzUyOUU4NTQ5RTU5OCIgVGl0bGU9IlJldm9jYXRpb24gQWNjZXB0YW5jZSBDaGVja2VyIj4KICAgICAgICAgICAgICAgICAgICAgICAgPENvbnN0cmFpbnQgSWQ9IlItRTRFMTg1NzE5QzE1RDYyN0VDMTYwNUNBRjVDREY2OTBEN0U0RjcxODQyRUI5RUMzMjJCQzUyOUU4NTQ5RTU5OCIgQmxvY2tUeXBlPSJSRVZfQ0MiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX0lSREMiPklzIHRoZSByZXZvY2F0aW9uIGRhdGEgY29uc2lzdGVudD88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8QWRkaXRpb25hbEluZm8+UmV2b2NhdGlvbiB0aGlzVXBkYXRlIDIwMjQtMDctMTAgMjI6MDAgaXMgaW4gdGhlIGNlcnRpZmljYXRlIHZhbGlkaXR5IHJhbmdlIDogMjAyMy0wOS0xMiAxMDowMCAtIDIwMjYtMDktMTIgMTA6MDA8L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICAgICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfQ1ZfSVNJUiI+SXMgcmV2b2NhdGlvbidzIHNpZ25hdHVyZSBpbnRhY3Q/PC9OYW1lPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfWENWX0NDQ0JCIj5DYW4gdGhlIGNlcnRpZmljYXRlIGNoYWluIGJlIGJ1aWx0IHRpbGwgYSB0cnVzdCBhbmNob3I/PC9OYW1lPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxDb25jbHVzaW9uPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPEluZGljYXRpb24+UEFTU0VEPC9JbmRpY2F0aW9uPgogICAgICAgICAgICAgICAgICAgICAgICA8L0NvbmNsdXNpb24+CiAgICAgICAgICAgICAgICAgICAgICAgIDxSZXZvY2F0aW9uVGhpc1VwZGF0ZT4yMDI0LTA3LTEwVDIyOjAwOjAwWjwvUmV2b2NhdGlvblRoaXNVcGRhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgIDxSZXZvY2F0aW9uUHJvZHVjdGlvbkRhdGU+MjAyNC0wNy0xMFQyMjowMDowMFo8L1Jldm9jYXRpb25Qcm9kdWN0aW9uRGF0ZT4KICAgICAgICAgICAgICAgICAgICA8L1JBQz4KICAgICAgICAgICAgICAgIDwvQ1JTPgogICAgICAgICAgICAgICAgPFJGQyBJZD0iUi1FNEUxODU3MTlDMTVENjI3RUMxNjA1Q0FGNUNERjY5MEQ3RTRGNzE4NDJFQjlFQzMyMkJDNTI5RTg1NDlFNTk4IiBUaXRsZT0iUmV2b2NhdGlvbiBGcmVzaG5lc3MgQ2hlY2tlciI+CiAgICAgICAgICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1JGQ19JUklGX1RVTlUiPklzIHRoZSByZXZvY2F0aW9uIGluZm9ybWF0aW9uIGZyZXNoIGZvciB0aGUgY2VydGlmaWNhdGUgKG1heGltdW0gYWNjZXB0ZWQgZnJlc2huZXNzID0gaW50ZXJ2YWwgYmV0d2VlbiB0aGlzVXBkYXRlIGFuZCBuZXh0VXBkYXRlKT88L05hbWU+CiAgICAgICAgICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPlZhbGlkYXRpb24gdGltZSA6IDIwMjQtMDctMTIgMDc6MDU7IHRoaXNVcGRhdGUgdGltZSA6IDIwMjQtMDctMTAgMjI6MDA7IG5leHRVcGRhdGUgdGltZSA6IDIwMjQtMDctMTYgMjI6MDA8L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJBQ0NNIj5BcmUgY3J5cHRvZ3JhcGhpYyBjb25zdHJhaW50cyBtZXQgZm9yIHRoZSByZXZvY2F0aW9uIGRhdGEgc2lnbmF0dXJlPzwvTmFtZT4KICAgICAgICAgICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgICAgICAgICA8QWRkaXRpb25hbEluZm8+U2lnbmF0dXJlIGFsZ29yaXRobSBSU0Egd2l0aCBTSEEyNTYgd2l0aCBrZXkgc2l6ZSA0MDk2IGF0IHZhbGlkYXRpb24gdGltZSA6IDIwMjQtMDctMTIgMDc6MDU8L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgICAgICAgICA8Q29uY2x1c2lvbj4KICAgICAgICAgICAgICAgICAgICAgICAgPEluZGljYXRpb24+UEFTU0VEPC9JbmRpY2F0aW9uPgogICAgICAgICAgICAgICAgICAgIDwvQ29uY2x1c2lvbj4KICAgICAgICAgICAgICAgIDwvUkZDPgogICAgICAgICAgICA8L1N1YlhDVj4KICAgICAgICAgICAgPFN1YlhDViBJZD0iQy1EQzUyOEUzNzg4NjkxQjNGNzk1MDE2NDA3NkY5NUIwMkM2NDMzNEM2ODY2MkJERURFNTc1MEI0RTBFNTMzOEY2IiBUcnVzdEFuY2hvcj0idHJ1ZSIgU2VsZlNpZ25lZD0iZmFsc2UiIFRpdGxlPSJDZXJ0aWZpY2F0ZSI+CiAgICAgICAgICAgICAgICA8Q29uY2x1c2lvbj4KICAgICAgICAgICAgICAgICAgICA8SW5kaWNhdGlvbj5QQVNTRUQ8L0luZGljYXRpb24+CiAgICAgICAgICAgICAgICA8L0NvbmNsdXNpb24+CiAgICAgICAgICAgIDwvU3ViWENWPgogICAgICAgIDwvWENWPgogICAgICAgIDxDViBUaXRsZT0iQ3J5cHRvZ3JhcGhpYyBWZXJpZmljYXRpb24iPgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX0NWX0lSRE9GIj5IYXMgdGhlIHJlZmVyZW5jZSBkYXRhIG9iamVjdCBiZWVuIGZvdW5kPzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgICAgIDxBZGRpdGlvbmFsSW5mbz5SZWZlcmVuY2UgOiByLWlkLWU0NDIyOWVhZmYyYzNkMTM5Yzk3NzE4MjBhYjgzNTFhLTE8L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfQ1ZfSVJET0kiPklzIHRoZSByZWZlcmVuY2UgZGF0YSBvYmplY3QgaW50YWN0PzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgICAgIDxBZGRpdGlvbmFsSW5mbz5SZWZlcmVuY2UgOiByLWlkLWU0NDIyOWVhZmYyYzNkMTM5Yzk3NzE4MjBhYjgzNTFhLTE8L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfQ1ZfSVJET0YiPkhhcyB0aGUgcmVmZXJlbmNlIGRhdGEgb2JqZWN0IGJlZW4gZm91bmQ/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPlJlZmVyZW5jZSA6ICN4YWRlcy1pZC1lNDQyMjllYWZmMmMzZDEzOWM5NzcxODIwYWI4MzUxYTwvQWRkaXRpb25hbEluZm8+CiAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJCQl9DVl9JUkRPSSI+SXMgdGhlIHJlZmVyZW5jZSBkYXRhIG9iamVjdCBpbnRhY3Q/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPlJlZmVyZW5jZSA6ICN4YWRlcy1pZC1lNDQyMjllYWZmMmMzZDEzOWM5NzcxODIwYWI4MzUxYTwvQWRkaXRpb25hbEluZm8+CiAgICAgICAgICAgIDwvQ29uc3RyYWludD4KICAgICAgICAgICAgPENvbnN0cmFpbnQ+CiAgICAgICAgICAgICAgICA8TmFtZSBLZXk9IkJCQl9DVl9JU0kiPklzIHRoZSBzaWduYXR1cmUgaW50YWN0PzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uY2x1c2lvbj4KICAgICAgICAgICAgICAgIDxJbmRpY2F0aW9uPlBBU1NFRDwvSW5kaWNhdGlvbj4KICAgICAgICAgICAgPC9Db25jbHVzaW9uPgogICAgICAgIDwvQ1Y+CiAgICAgICAgPFNBViBUaXRsZT0iU2lnbmF0dXJlIEFjY2VwdGFuY2UgVmFsaWRhdGlvbiI+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJCQkJfSUNTX0lTQVNDUCI+SXMgdGhlIHNpZ25lZCBhdHRyaWJ1dGU6ICdzaWduaW5nLWNlcnRpZmljYXRlJyBwcmVzZW50PzwvTmFtZT4KICAgICAgICAgICAgICAgIDxTdGF0dXM+T0s8L1N0YXR1cz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQkJCX1NBVl9JU1FQU1RQIj5JcyB0aGUgc2lnbmVkIHF1YWxpZnlpbmcgcHJvcGVydHk6ICdzaWduaW5nLXRpbWUnIHByZXNlbnQ/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJBQ0NNIj5BcmUgY3J5cHRvZ3JhcGhpYyBjb25zdHJhaW50cyBtZXQgZm9yIHRoZSBzaWduYXR1cmUgY3JlYXRpb24/PC9OYW1lPgogICAgICAgICAgICAgICAgPFN0YXR1cz5PSzwvU3RhdHVzPgogICAgICAgICAgICAgICAgPEFkZGl0aW9uYWxJbmZvPlNpZ25hdHVyZSBhbGdvcml0aG0gUlNBIHdpdGggU0hBMjU2IHdpdGgga2V5IHNpemUgMjA0OCBhdCB2YWxpZGF0aW9uIHRpbWUgOiAyMDI0LTA3LTEyIDA3OjA1PC9BZGRpdGlvbmFsSW5mbz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uc3RyYWludD4KICAgICAgICAgICAgICAgIDxOYW1lIEtleT0iQUNDTSI+QXJlIGNyeXB0b2dyYXBoaWMgY29uc3RyYWludHMgbWV0IGZvciB0aGUgb2JqZWN0IHJlZmVyZW5jZT88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICA8QWRkaXRpb25hbEluZm8+RGlnZXN0IGFsZ29yaXRobSBTSEEyNTYgYXQgdmFsaWRhdGlvbiB0aW1lIDogMjAyNC0wNy0xMiAwNzowNSBmb3Igb2JqZWN0IHJlZmVyZW5jZSB3aXRoIG5hbWUgOiByLWlkLWU0NDIyOWVhZmYyYzNkMTM5Yzk3NzE4MjBhYjgzNTFhLTE8L0FkZGl0aW9uYWxJbmZvPgogICAgICAgICAgICA8L0NvbnN0cmFpbnQ+CiAgICAgICAgICAgIDxDb25zdHJhaW50PgogICAgICAgICAgICAgICAgPE5hbWUgS2V5PSJBQ0NNIj5BcmUgY3J5cHRvZ3JhcGhpYyBjb25zdHJhaW50cyBtZXQgZm9yIHRoZSBzaWduZWQgcHJvcGVydGllcz88L05hbWU+CiAgICAgICAgICAgICAgICA8U3RhdHVzPk9LPC9TdGF0dXM+CiAgICAgICAgICAgICAgICA8QWRkaXRpb25hbEluZm8+RGlnZXN0IGFsZ29yaXRobSBTSEEyNTYgYXQgdmFsaWRhdGlvbiB0aW1lIDogMjAyNC0wNy0xMiAwNzowNSBmb3Igc2lnbmVkIHByb3BlcnRpZXMgd2l0aCBuYW1lIDogI3hhZGVzLWlkLWU0NDIyOWVhZmYyYzNkMTM5Yzk3NzE4MjBhYjgzNTFhPC9BZGRpdGlvbmFsSW5mbz4KICAgICAgICAgICAgPC9Db25zdHJhaW50PgogICAgICAgICAgICA8Q29uY2x1c2lvbj4KICAgICAgICAgICAgICAgIDxJbmRpY2F0aW9uPlBBU1NFRDwvSW5kaWNhdGlvbj4KICAgICAgICAgICAgPC9Db25jbHVzaW9uPgogICAgICAgICAgICA8Q3J5cHRvZ3JhcGhpY1ZhbGlkYXRpb24gc2VjdXJlPSJ0cnVlIj4KICAgICAgICAgICAgICAgIDxBbGdvcml0aG0+CiAgICAgICAgICAgICAgICAgICAgPE5hbWU+UlNBIHdpdGggU0hBMjU2PC9OYW1lPgogICAgICAgICAgICAgICAgICAgIDxVcmk+aHR0cDovL3d3dy53My5vcmcvMjAwMS8wNC94bWxkc2lnLW1vcmUjcnNhLXNoYTI1NjwvVXJpPgogICAgICAgICAgICAgICAgICAgIDxLZXlMZW5ndGg+MjA0ODwvS2V5TGVuZ3RoPgogICAgICAgICAgICAgICAgPC9BbGdvcml0aG0+CiAgICAgICAgICAgICAgICA8VmFsaWRhdGlvblRpbWU+MjAyNC0wNy0xMlQwNzowNToyN1o8L1ZhbGlkYXRpb25UaW1lPgogICAgICAgICAgICAgICAgPENvbmNlcm5lZE1hdGVyaWFsPlMtN0JBOEYwNzk5QjAxQzlFNEYxMTZDNDc3OTNENjk0QjI1NENGNTUxMDYwQTA3RDg3MzRCRjVCMTJCMzU5MzVBODwvQ29uY2VybmVkTWF0ZXJpYWw+CiAgICAgICAgICAgIDwvQ3J5cHRvZ3JhcGhpY1ZhbGlkYXRpb24+CiAgICAgICAgPC9TQVY+CiAgICAgICAgPENlcnRpZmljYXRlQ2hhaW4+CiAgICAgICAgICAgIDxDaGFpbkl0ZW0gSWQ9IkMtMTI0MzQ0MTdGNzExQTNCNjQ2NEU1Mzc3OERBMDMwOERGMDM5QjA4QkYxNjAxRDY5RjIyMzYwMDUyMEQ0REVCNCI+CiAgICAgICAgICAgICAgICA8U291cmNlPlNJR05BVFVSRTwvU291cmNlPgogICAgICAgICAgICA8L0NoYWluSXRlbT4KICAgICAgICAgICAgPENoYWluSXRlbSBJZD0iQy1EQzUyOEUzNzg4NjkxQjNGNzk1MDE2NDA3NkY5NUIwMkM2NDMzNEM2ODY2MkJERURFNTc1MEI0RTBFNTMzOEY2Ij4KICAgICAgICAgICAgICAgIDxTb3VyY2U+VFJVU1RFRF9TVE9SRTwvU291cmNlPgogICAgICAgICAgICA8L0NoYWluSXRlbT4KICAgICAgICAgICAgPENoYWluSXRlbSBJZD0iQy0wMTMyNUFFQjE5Mzg3MUVFQzkwRkE4OTU1NjgwNEU0MTg1Q0IzNjJFMENBODdBM0Q3OTkzOUM3MTE4NkRBODA1Ij4KICAgICAgICAgICAgICAgIDxTb3VyY2U+VFJVU1RFRF9TVE9SRTwvU291cmNlPgogICAgICAgICAgICA8L0NoYWluSXRlbT4KICAgICAgICA8L0NlcnRpZmljYXRlQ2hhaW4+CiAgICAgICAgPENvbmNsdXNpb24+CiAgICAgICAgICAgIDxJbmRpY2F0aW9uPlBBU1NFRDwvSW5kaWNhdGlvbj4KICAgICAgICA8L0NvbmNsdXNpb24+CiAgICA8L0Jhc2ljQnVpbGRpbmdCbG9ja3M+CjwvRGV0YWlsZWRSZXBvcnQ+Cg=="}],"valide":true}